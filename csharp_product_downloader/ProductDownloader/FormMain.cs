using Newtonsoft.Json;
using ProductDownloader.MyClass;
using System;
using System.Collections.Generic;
using System.IO;
using System.Windows.Forms;

namespace ProductDownloader
{
    public partial class FormMain : Form
    {
        /* Application Settingss */
        public string downloadAssembliesTo = Environment.GetFolderPath(Environment.SpecialFolder.Desktop); // download to desktop...
        public string missingFilesName = "MissingFilesLog.json"; // for missing files...

        /* Common Variables */
        Notifications _notifs = new Notifications(); // for pushing notifications...
        Downloader _downloader = new Downloader(); // for download any file...
        string _ticketName = ""; // also this is main folder name...
        string _ticketPath = ""; // download ticket path...

        public FormMain()
        {
            InitializeComponent();
        }

        private void FormMain_Load(object sender, EventArgs e)
        {
            /* Notifier Details */
            _notifs.notifier = myNotifier;

            /* Open File Dialog */
            myFileOpener.InitialDirectory = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Downloads";
            myFileOpener.Filter = "JSON File|*.json";
            myFileOpener.Title = "Select a Download Ticket generated by 3DExperience...";

            /* Other Interface Details */
            txtTicketPath.ReadOnly = true;
            btnStartDownload.Enabled = false;
            myProgress.Visible = false;
            myLabel.Text = "";
            _ticketName = "";
            _ticketPath = "";
        }

        private void btnImportTicket_Click(object sender, EventArgs e)
        {
            /* Import Download Ticket */
            if (myFileOpener.ShowDialog() == DialogResult.OK) {
                _ticketPath = myFileOpener.FileName;
                _ticketName = myFileOpener.SafeFileName.Replace(".json","");
                txtTicketPath.Text = _ticketPath;
                btnStartDownload.Enabled = true;
                btnStartDownload.Visible = true;
                myLabel.Text = "";
                this.Refresh();
            }
        }

        private void btnStartDownload_Click(object sender, EventArgs e)
        {
            /* Start to download */
            myProgress.Visible = true;
            btnStartDownload.Visible = false;
            myLabel.Text = "Download is starting...";

            /* Read Ticket File */
            string ticket = File.ReadAllText(_ticketPath);
            DownloadTicketFile downloadTicket = JsonConvert.DeserializeObject<DownloadTicketFile>(ticket);

            /* Set Progress Bar */
            int fileCount = _notifs.Calculate_Progress_Increment(downloadTicket);
            myProgress.Value = 0;
            myProgress.Step = 1;
            myProgress.Maximum = fileCount;
            myProgress.Refresh();

            /* Create a download folder  */
            System.IO.Directory.CreateDirectory(downloadAssembliesTo + "\\" + _ticketName);

            /* Create a sub folder Structures */
            for (int i = 0; i < downloadTicket.totalFolder; i++)
            {
                /* Target Path */
                string path = downloadAssembliesTo + "\\" + _ticketName + "\\" + downloadTicket.items[i].name;

                /* Create folder */
                System.IO.Directory.CreateDirectory(path);

                /* Create a missing files log file */
                File.WriteAllText(
                    path + "\\" + missingFilesName, 
                    JsonConvert.SerializeObject(new MissingFiles
                        {
                            parent = downloadTicket.items[i].name,
                            missingFiles = new List<MissingFile>(),
                        }));
            }

            /* Start to Download */
            for (int i = 0; i < downloadTicket.totalFolder; i++)
            {
                /* Current Assembly */
                Item curAssembly = downloadTicket.items[i];

                /* Save folder path */
                string targetPath = downloadAssembliesTo + "\\" + _ticketName + "\\" + curAssembly.name;

                /* Update Label */
                myLabel.Text = curAssembly.name + " downloading...";
                myLabel.Refresh();

                /* Update Progressbar */
                myProgress.Value = myProgress.Value + myProgress.Step;
                myProgress.Refresh();

                /* Download Main Assembly */
                _downloader.Download(curAssembly.downloadTicket.url, curAssembly.downloadTicket.name, targetPath, curAssembly.name, curAssembly.id);

                /* Download Main assembly drawings if exist */
                if (curAssembly.drawings.Count > 0)
                {
                    for (int j = 0; j < curAssembly.drawings.Count; j++)
                    {
                        /* Update label tag */
                        myLabel.Text = curAssembly.drawings[j].downloadTicket.name + " downloading...";
                        myLabel.Refresh();

                        /* Download drawing */
                        _downloader.Download(curAssembly.drawings[j].downloadTicket.url, curAssembly.drawings[j].downloadTicket.name, targetPath, curAssembly.drawings[j].info.name, curAssembly.drawings[j].info.id);
                    }
                }

                /* Download children */
                _downloader.Download_Children(curAssembly.children, targetPath, myLabel, myProgress);
            }

            /* End Process */
            myProgress.Visible = false;
            myProgress.Value = 0;
            myLabel.Text = "Download completed...";

            /* Download Completed */
            _notifs.Push_Notification(_ticketName, "Download completed!");
        }
    }
}
